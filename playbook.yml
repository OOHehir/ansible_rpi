# Routine playbook
- name: Routine playbook
  hosts: localhost
  connection: local
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ansible_playbook_python}}"
    repo_path: /home/octopus/ansible/ansible_rpi/
    py_dest_path: /home/octopus
    www_dest_path: /var/www/html
  become: true
  become_user: root
  become_method: ansible.builtin.sudo
  gather_facts: true

  tasks:
    - name: Update the system
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        autoremove: true
        autoclean: true

    - name: Ensure apt packages are installed
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - python3
        - python3-pip

    - name: Ensure pip packages installed
      ansible.builtin.pip:
        name: "{{ item }}"
        state: present
      with_items:
        - rpi_ws281x
        - RPi.GPIO
        - flask

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /home/octopus
        state: directory
        mode: "0755"

    - name: Update Python scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ py_dest_path }}"
        mode: "0644"
        owner: octopus
        group: octopus
      with_fileglob:
        - "{{ repo_path }}/python_scripts/*.py"

    # - name: Update webserver files
    #   ansible.builtin.copy:
    #     src: "{{ item }}"
    #     dest: "{{ www_dest_path }}"
    #     mode: "0644"
    #     owner: octopus
    #     group: octopus
    #   with_fileglob:
    #     - "{{ repo_path }}/webpages/*"

    - name: Install service file
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/systemd/system/
        mode: "0644"
        owner: root
        group: root
      with_items:
        - /misc/led.service/led.service

    - name: Check LED service status
      ansible.builtin.systemd:
        name: led.service
        state: started
        enabled: true

    - name: Blacklist Broadcom audio driver (for WS2812 LEDs)
      # Restart required if this file is not previously present
      ansible.builtin.copy:
        src: "{{ repo_path }}/misc/blacklist-bcm2835.conf"
        dest: /etc/modprobe.d/
        mode: "0644"
        owner: root
        group: root
        force: false
