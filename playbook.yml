# Routine playbook
- name: Routine playbook
  hosts: localhost
  connection: local
  vars:
    ansible_connection: local
    ansible_python_interpreter: "{{ansible_playbook_python}}"
    docker_requirements: [libffi-dev, libssl-dev]
    repo_path: /home/octopus/ansible/
    home_folder: /home/octopus
    www_dest_path: /var/www/html
    giv_tcp_path: /home/octopus/giv_tcp
  become: true
  become_user: root
  become_method: ansible.builtin.sudo
  gather_facts: false

  tasks:
    - name: Update the system
      # Update but don't upgrade in case of breaking changes
      ansible.builtin.apt:
        update_cache: true
        upgrade: safe
        autoremove: true
        autoclean: true

    - name: Ensure apt packages are installed
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - mosquitto
        - "{{ docker_requirements }}"

    - name: Get Docker Convenience Script
      ansible.builtin.get_url:
        url: https://get.docker.com
        dest: "{{ home_folder }}get-docker.sh"
        mode: '0755'

    - name: Install Docker
      ansible.builtin.command:
        cmd: sh "{{ home_folder }}get-docker.sh"
        creates: /usr/bin/docker

    # - name: Ensure Docker Compose is installed
    #   ansible.builtin.command:
    #     cmd: pip install docker-compose
    #     creates: /usr/local/bin/docker-compose

    - name: Ensure pip packages installed
      ansible.builtin.pip:
        name: "{{ item }}"
        state: present
      with_items:
        - docker-compose
        - rpi_ws281x
        - RPi.GPIO
        - flask

    - name: Ensure group "docker" exists with correct gid
      ansible.builtin.group:
        name: docker
        state: present

    - name: Make octopus user execute docker commands
      ansible.builtin.user:
        name: octopus
        groups: docker
        append: true
      become: true
      become_user: root

    - name: Update Python scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ home_folder }}"
        mode: "0644"
        owner: octopus
        group: octopus
      with_fileglob:
        - "python_scripts/*.py"

    - name: Install service file
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/systemd/system/
        mode: "0644"
        owner: root
        group: root
      with_items:
        - "{{ repo_path }}misc/led.service"
        - "{{ repo_path }}misc/button.service"
        - "{{ repo_path }}misc/maintenance.service"
        - "{{ repo_path }}misc/maintenance.timer"

    - name: Check services started
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
        daemon_reload: true
      with_items:
        - led.service
        - button.service
        # Don't start 'maintenance.service'
        # TODO: - maintenance.timer
        - mosquitto.service


    - name: Blacklist Broadcom audio driver (for WS2812 LEDs)
      # Restart required if this file is not previously present
      ansible.builtin.copy:
        src: "{{ repo_path }}/misc/blacklist-bcm2835.conf"
        dest: /etc/modprobe.d/
        mode: "0644"
        owner: root
        group: root
        force: false

    - name: Check/ enable UART on RPi
      # Needs to be after [all] in /boot/config.txt
      ansible.builtin.lineinfile:
        path: /boot/config.txt
        line: 'enable_uart=1'
        insertafter: '^#\[all\]'
        state: present
        owner: root
        group: root
        mode: "0644"

    # - name: Check/ enable console auto login for octopus user
    #   #  /etc/systemd/system/getty@tty1.service.d/autologin.conf
    #   ansible.builtin.copy:
    #     src: "{{ repo_path }}/misc/autologin.conf"
    #     dest: /
    #     mode: "0644"
    #     owner: root
    #     group: root
    #     force: false

    - name: Checkout giv_tcp repository
      ansible.builtin.git:
        repo: 'https://github.com/britkat1980/giv_tcp.git'
        dest: "{{ giv_tcp_path }}"
        version: main
        update: false
      become: true
      become_user: octopus

    - name: Modify path in docker-compose file
      ansible.builtin.lineinfile:
        # Replace - c:\config\GivTCP:/config/GivTCP with - /home/octopus/giv_tcp/config:/config/GivTCP
        path: "{{ giv_tcp_path }}/docker-compose.yml"
        search_string: '- c:\config\GivTCP:/config/GivTCP'
        line: '      - /home/octopus/giv_tcp/config:/config/GivTCP'
        owner: octopus
        group: octopus
        mode: '0644'

    - name: Remove version in docker-compose file
      ansible.builtin.lineinfile:
        # Remove 'version: "3.9"' line
        path: "{{ giv_tcp_path }}/docker-compose.yml"
        regexp: '^version:'
        state: absent
        owner: octopus
        group: octopus
        mode: '0644'

    - name: Fix whitespace in docker-compose file
      ansible.builtin.lineinfile:
        # Remove trailing space from  - TZ = "Europe/London"
        path: "{{ giv_tcp_path }}/docker-compose.yml"
        search_string: '- TZ = "Europe/London"'
        line: '      - TZ="Europe/London"'
        owner: octopus
        group: octopus
        mode: '0644'

    - name: Restart giv_tcp docker container
      # Need to be sudo for this to work
      community.docker.docker_compose_v2:
        project_src: "{{ giv_tcp_path }}"
        state: restarted
      become: true
      become_user: octopus